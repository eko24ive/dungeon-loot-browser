{"version":3,"sources":["ducks/timeFilter.js","ducks/dungeonsDump.js","ducks/activeDungeon.js","ducks/availableDungeons.js","store/store.js","middleware/localStorageMiddleware.js","components/TimeSlider/TimeSlider.js","components/Select/Select.style.js","components/Select/Select.js","pages/Home/Home.style.js","pages/Home/Home.js","selectors/getLoot.js","elements/Table/Table.js","pages/Results/Results.style.js","pages/Results/Results.js","components/DropZone/DropZone.style.js","components/DropZone/DropZone.js","elements/AppWrapper/AppWrapper.js","elements/Title/Title.js","index.js"],"names":["setTimeFilter","_ref","type","timeFrom","timeTo","setDungeonsDump","dump","setActiveDungeon","dungeon","setAvailableDungeons","dungeons","initialState","activeDungeon","timeFilter","Map","dungeonsDump","availableDungeons","rootReducer","combineReducers","state","action","set","arguments","length","undefined","middleware","applyMiddleware","getState","next","result","localStorage","setItem","JSON","stringify","get","toJS","createStore","getItem","fromJS","parse","compose","window","__REDUX_DEVTOOLS_EXTENSION__","TimeSlider","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","sliderRef","React","createRef","_this$props","setTimeFilterAction","formatTooltip","value","raw","String","toFixed","concat","noUiSlider","create","start","step","margin","connect","range","min","max","tooltips","to","pips","mode","density","filter","on","formatted","handle","_ref2","slicedToArray","end","_this2","react_default","a","createElement","ref","Component","dispatch","bindActionCreators","styled","div","_templateObject","setActiveDungeonAction","Select_style","react_select_esm","placeholder","options","onChange","Home_style_templateObject","Home","Home_style","components_TimeSlider_TimeSlider","components_Select_Select","createSelector","activeDugneon","dungeonForwards","forwards","forwardsInTimeFrame","unixTime","hours","moment","items","loot","forEach","forward","index","push","time","item","amount","totalItems","toConsumableArray","keys","map","name","reduce","b","percent","sort","prev","TableStyle","table","Table_templateObject","Row","tr","_templateObject2","Head","_templateObject3","Cell","th","td","_templateObject4","Table","children","Results_style_templateObject","ResultBlock","Results_style_templateObject2","_getLoot","getLoot","Results_style","Table_Table","key","_ref3","lootItems","DropZone_style_templateObject","DropZone","onDrop","acceptedFiles","file","reader","FileReader","onload","dungeonName","_dungeonsDump$dungeon","technicalName","label","readAsText","setDungeonsDumpAction","setAvailableDungeonsAction","DropZone_style","dist_es","accept","multiple","style","cursor","top","width","height","display","justifyContent","alignItems","backgroundColor","fontSize","activeStyle","isDumpValid","AppWrapper_templateObject","p","Title_templateObject","ReactDOM","render","AppWrapper","es","store","HashRouter","components_DropZone_DropZone","Title","Route","path","exact","component","Results","document","getElementById"],"mappings":"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","file":"static/js/main.16dd7908.chunk.js","sourcesContent":["export const SET_TIME_FILTER = 'SET_TIME_FILTER';\n\nexport const setTimeFilter = ({\n  timeFrom,\n  timeTo,\n}) => ({\n  type: SET_TIME_FILTER,\n  timeFrom,\n  timeTo,\n});\n\nexport default function (state, action) {\n  const { timeFrom, timeTo } = action;\n\n  switch (action.type) {\n    case SET_TIME_FILTER:\n      return state.set('timeFrom', timeFrom).set('timeTo', timeTo);\n    default:\n      return state;\n  }\n}\n","export const SET_DUNGEONS_DUMP = 'SET_DUNGEONS_DUMP';\n\nexport const setDungeonsDump = dump => ({\n  type: SET_DUNGEONS_DUMP,\n  dump,\n});\n\nexport default function (state = null, action) {\n  switch (action.type) {\n    case SET_DUNGEONS_DUMP:\n      return action.dump;\n    default:\n      return state;\n  }\n}\n","export const SET_DUNGEON = 'SET_DUNGEON';\n\nexport const setActiveDungeon = dungeon => ({\n  type: SET_DUNGEON,\n  dungeon,\n});\n\nexport default function (state, action) {\n  switch (action.type) {\n    case SET_DUNGEON:\n      return action.dungeon;\n    default:\n      return state;\n  }\n}\n","export const SET_AVAILABLE_DUNGEONS = 'SET_AVAILABLE_DUNGEONS';\n\nexport const setAvailableDungeons = dungeons => ({\n  type: SET_AVAILABLE_DUNGEONS,\n  dungeons,\n});\n\nexport default function (state, action) {\n  switch (action.type) {\n    case SET_AVAILABLE_DUNGEONS:\n      return action.dungeons;\n    default:\n      return state;\n  }\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport { Map, fromJS } from 'immutable';\n\nimport { combineReducers } from 'redux-immutable';\n\nimport localStorageMiddleware from '../middleware/localStorageMiddleware';\n\nimport activeDungeonReducer from '../ducks/activeDungeon';\nimport timeFilterReducer from '../ducks/timeFilter';\nimport dungeonsDumpReducer from '../ducks/dungeonsDump';\nimport availableDungeonsReducer from '../ducks/availableDungeons';\n\nconst initialState = {\n  activeDungeon: null,\n  timeFilter: Map({ timeFrom: 0, timeTo: 24 }),\n  dungeonsDump: null,\n  availableDungeons: [],\n};\n\nconst rootReducer = combineReducers({\n  activeDungeon: activeDungeonReducer,\n  timeFilter: timeFilterReducer,\n  dungeonsDump: dungeonsDumpReducer,\n  availableDungeons: availableDungeonsReducer,\n});\n\nconst getInitialState = () => {\n  if (localStorage.getItem('timeFilter')) {\n    initialState.timeFilter = fromJS(JSON.parse(localStorage.getItem('timeFilter')));\n  }\n\n  if (localStorage.getItem('dungeonsDump')) {\n    initialState.dungeonsDump = JSON.parse(localStorage.getItem('dungeonsDump'));\n  }\n\n  if (localStorage.getItem('activeDungeon')) {\n    initialState.activeDungeon = localStorage.getItem('activeDungeon');\n  }\n\n  if (localStorage.getItem('availableDungeons')) {\n    initialState.availableDungeons = JSON.parse(localStorage.getItem('availableDungeons'));\n  }\n\n  return Map(initialState);\n};\n\nconst middleware = applyMiddleware(localStorageMiddleware);\n\nexport default createStore(rootReducer, getInitialState(), compose(\n  middleware,\n  (window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()),\n));\n","import { SET_TIME_FILTER } from '../ducks/timeFilter';\nimport { SET_DUNGEONS_DUMP } from '../ducks/dungeonsDump';\nimport { SET_DUNGEON } from '../ducks/activeDungeon';\nimport { SET_AVAILABLE_DUNGEONS } from '../ducks/availableDungeons';\n\nexport default ({ getState }) => next => (action) => {\n  const result = next(action);\n\n  switch (action.type) {\n    case SET_TIME_FILTER:\n      localStorage.setItem('timeFilter', JSON.stringify(getState().get('timeFilter').toJS()));\n\n      return result;\n    case SET_DUNGEONS_DUMP:\n      localStorage.setItem('dungeonsDump', JSON.stringify(getState().get('dungeonsDump')));\n\n      return result;\n    case SET_DUNGEON:\n      localStorage.setItem('activeDungeon', getState().get('activeDungeon'));\n\n      return result;\n    case SET_AVAILABLE_DUNGEONS:\n      localStorage.setItem('availableDungeons', JSON.stringify(getState().get('availableDungeons')));\n\n      return result;\n    default:\n      return result;\n  }\n};\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport noUiSlider from 'nouislider';\nimport 'nouislider/distribute/nouislider.min.css';\n\n\nimport { setTimeFilter as setTimeFilterAction } from '../../ducks/timeFilter';\n\nconst getTimeFilterValues = timeFilter => ({\n  timeFrom: timeFilter.get('timeFrom'),\n  timeTo: timeFilter.get('timeTo'),\n});\n\nconst mapStateToProps = state => getTimeFilterValues(state.get('timeFilter'));\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  setTimeFilterAction,\n}, dispatch);\n\nclass TimeSlider extends Component {\n  constructor(props) {\n    super(props);\n    this.sliderRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { timeFrom, timeTo, setTimeFilterAction: setTimeFilter } = this.props;\n\n    const formatTooltip = (value) => {\n      const raw = String(value.toFixed(0));\n\n      return raw.length === 1 ? `0${raw}:00` : `${raw}:00`;\n    };\n\n    noUiSlider.create(this.sliderRef, {\n      start: [\n        timeFrom,\n        timeTo,\n      ],\n      step: 1,\n      margin: 1,\n      connect: true,\n      range: {\n        min: 0,\n        max: 24,\n      },\n      tooltips: [{\n        to: formatTooltip,\n      }, {\n        to: formatTooltip,\n      }],\n      pips: {\n        mode: 'range',\n        density: 3,\n        filter: () => 0,\n      },\n      /* pips: {\n        mode: 'values',\n        values: Array(25).fill().map((v, i) => i),\n        stepped: true,\n        format: {\n          to(value) {\n            return `${value.toFixed(0)}`;\n          },\n        },\n      }, */\n    });\n\n    this.sliderRef.noUiSlider.on('change', (formatted, handle, [start, end]) => {\n      setTimeFilter({\n        timeFrom: start,\n        timeTo: end,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div ref={(ref) => { this.sliderRef = ref; }} />\n    );\n  }\n}\n\nTimeSlider.propTypes = {\n  timeFrom: PropTypes.number.isRequired,\n  timeTo: PropTypes.number.isRequired,\n  setTimeFilterAction: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TimeSlider);\n","import styled from 'styled-components';\n\nexport default styled.div`\n  margin-top: 35px;\n`;\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ReactSelect from 'react-select';\n\nimport { setActiveDungeon as setActiveDungeonAction } from '../../ducks/activeDungeon';\n\nimport SelectWrapper from './Select.style';\n\nconst mapStateToProps = state => ({\n  activeDungeon: state.get('activeDungeon'),\n  availableDungeons: state.get('availableDungeons'),\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  setActiveDungeonAction,\n}, dispatch);\n\n\nconst onChange = setActiveDungeon => ({ value }) => {\n  setActiveDungeon(value);\n};\n\nconst Select = ({ setActiveDungeonAction: setActiveDungeon, availableDungeons }) => (\n  <SelectWrapper>\n    <ReactSelect\n      placeholder=\"Выбери данж\"\n      options={availableDungeons}\n      onChange={onChange(setActiveDungeon)}\n    />\n  </SelectWrapper>\n);\n\nSelect.propTypes = {\n  setActiveDungeonAction: PropTypes.func.isRequired,\n  availableDungeons: PropTypes.array.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Select);\n","import styled from 'styled-components';\n\nexport default styled.div`\n  margin-top: 20px;\n  padding: 20px 40px;\n`;\n","import React from 'react';\n\nimport TimeSlider from '../../components/TimeSlider/TimeSlider';\nimport Select from '../../components/Select/Select';\n\nimport HomeWrapper from './Home.style';\n\nconst Home = () => (\n  <HomeWrapper>\n    <TimeSlider />\n    <Select />\n  </HomeWrapper>\n);\n\nexport default Home;\n","import { createSelector } from 'reselect';\nimport moment from 'moment';\n\nconst getActiveDungeon = state => state.get('activeDungeon');\nconst getTimeFilter = state => state.get('timeFilter');\nconst getDungeonsDump = state => state.get('dungeonsDump');\n\nexport default createSelector(\n  [\n    getActiveDungeon,\n    getDungeonsDump,\n    getTimeFilter,\n  ],\n  (activeDugneon, dump, timeFilter) => {\n    if (activeDugneon) {\n      const dungeonForwards = dump[activeDugneon].forwards;\n\n      const timeFrom = timeFilter.get('timeFrom');\n      const timeTo = timeFilter.get('timeTo');\n\n      const forwardsInTimeFrame = dungeonForwards.filter(({ unixTime }) => {\n        const hours = moment(unixTime).hours();\n\n        return timeFrom <= hours && hours <= timeTo;\n      });\n\n      const items = {};\n      const loot = [];\n\n      forwardsInTimeFrame.forEach((forward, index) => {\n        loot.push({\n          loot: forward.loot,\n          time: forward.time,\n          index,\n        });\n\n        if (forward.item !== null) {\n          if (items[forward.item]) {\n            items[forward.item].amount += 1;\n          } else {\n            items[forward.item] = {\n              amount: 1,\n              time: forward.time,\n              index,\n            };\n          }\n        }\n      });\n\n      const totalItems = [...Object.keys(items).map(name => items[name].amount), 0]\n        .reduce((a, b) => a + b);\n\n      return {\n        items: Object.keys(items).map(name => ({\n          name,\n          time: items[name].time,\n          amount: items[name].amount,\n          index: items[name].index,\n          percent: ((items[name].amount * 100) / totalItems).toFixed(1),\n        })).sort((prev, next) => -(prev.percent - next.percent)),\n        loot,\n      };\n    }\n\n    return {\n      items: [],\n      loot: [],\n    };\n  },\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst TableStyle = styled.table`\n  width: 100%;\n`;\n\nexport const Row = styled.tr``;\n\nexport const Head = styled(Row)`\n  font-weight: bold;\n`;\n\nexport const HeadCell = styled.th;\n\nexport const Cell = styled.td`\n  border: 1px solid #333;\n  padding: 5px 15px;\n`;\n\nexport const Table = ({ children }) => (\n  <TableStyle>\n    <tbody>\n      {children}\n    </tbody>\n  </TableStyle>\n);\n\nTable.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport default styled.div`\n  display:flex;\n  padding: 20px 40px;\n  justify-content: space-between;\n  flex-direction: row;\n\n  @media (max-width: 800px) {\n    flex-direction: column;\n  }\n`;\n\nexport const ResultBlock = styled.div`\n  flex: 1;\n\n  &:first-child {\n    margin-right: 10px;\n  }\n\n  &:last-child {\n    margin-left: 10px;\n  }\n\n  @media (max-width: 800px) {\n    &:first-child {\n      margin-bottom: 10px;\n      margin-right: 0;\n    }\n\n    &:last-child {\n      margin-top: 10px;\n      margin-left: 0;\n    }\n  }\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport getLoot from '../../selectors/getLoot';\n\nimport {\n  Table, Row, Head, Cell,\n} from '../../elements/Table/Table';\n\nimport ResultsWrapper, { ResultBlock } from './Results.style';\n\nconst mapStateToProps = (state) => {\n  const { items, loot } = getLoot(state);\n\n  return {\n    items,\n    loot,\n  };\n};\n\nconst Results = ({\n  items,\n  loot,\n}) => (\n  <ResultsWrapper>\n    <ResultBlock>\n      <Table>\n        <Head>\n          <Cell>Предмет</Cell>\n          <Cell>Количество</Cell>\n          <Cell>Шанс</Cell>\n          <Cell>Время</Cell>\n        </Head>\n        {\n            items.map(({\n              name,\n              amount,\n              percent,\n              time,\n              index,\n            }) => (\n              <Row key={index}>\n                <Cell>{name}</Cell>\n                <Cell>{amount}</Cell>\n                <Cell>{percent}%</Cell>\n                <Cell>{time}</Cell>\n              </Row>\n            ))\n        }\n      </Table>\n    </ResultBlock>\n    <ResultBlock>\n      <Table>\n        <Head>\n          <Cell>Лут</Cell>\n          <Cell>Время</Cell>\n        </Head>\n        {\n            loot.map(({ loot: lootItems, time, index }) => (\n              <Row key={index}>\n                <Cell>{lootItems}</Cell>\n                <Cell>{time}</Cell>\n              </Row>\n            ))\n          }\n      </Table>\n    </ResultBlock>\n  </ResultsWrapper>\n);\n\nResults.propTypes = {\n  items: PropTypes.array.isRequired,\n  loot: PropTypes.array.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n)(Results);\n","import styled from 'styled-components';\n\nexport default styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 999;\n`;\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\n\nimport { setDungeonsDump as setDungeonsDumpAction } from '../../ducks/dungeonsDump';\nimport { setAvailableDungeons as setAvailableDungeonsAction } from '../../ducks/availableDungeons';\n\nimport DropZoneWrapper from './DropZone.style';\n\nconst mapStateToProps = state => ({\n  dungeonsDump: state.get('dungeonsDump'),\n  availableDungeons: state.get('availableDungeons'),\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  setDungeonsDumpAction,\n  setAvailableDungeonsAction,\n}, dispatch);\n\nclass DropZone extends Component {\n  static state = {\n    isDumpValid: true,\n  }\n\n  onDrop = ({\n    setDungeonsDump,\n    setAvailableDungeons,\n  }) => (acceptedFiles) => {\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const dungeonsDump = JSON.parse(reader.result);\n\n        const availableDungeons = Object.keys(dungeonsDump).map((dungeonName) => {\n          const {\n            name,\n            technicalName,\n          } = dungeonsDump[dungeonName];\n\n          return {\n            value: technicalName,\n            label: name,\n          };\n        });\n\n\n        setAvailableDungeons(availableDungeons);\n        setDungeonsDump(dungeonsDump);\n      };\n\n      reader.readAsText(file);\n    });\n  };\n\n  render() {\n    const {\n      setDungeonsDumpAction: setDungeonsDump,\n      setAvailableDungeonsAction: setAvailableDungeons,\n      dungeonsDump,\n      availableDungeons,\n    } = this.props;\n\n    return (dungeonsDump === null && availableDungeons.length === 0) && (\n      <DropZoneWrapper>\n        <Dropzone\n          accept=\".json\"\n          multiple={false}\n          onDrop={this.onDrop({\n            setDungeonsDump,\n            setAvailableDungeons,\n          })}\n          style={{\n            cursor: 'pointer',\n            top: 0,\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            backgroundColor: 'white',\n            fontSize: '34px',\n          }}\n          activeStyle={{\n            backgroundColor: '#effff0',\n          }}\n        >\n          Перетащи дамп сюда, либо клинки в любом месте что бы открыть файловый диалог\n        </Dropzone>\n      </DropZoneWrapper>\n    );\n  }\n}\n\nDropZone.propTypes = {\n  dungeonsDump: PropTypes.object.isRequired,\n  availableDungeons: PropTypes.array.isRequired,\n  setDungeonsDumpAction: PropTypes.func.isRequired,\n  setAvailableDungeonsAction: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DropZone);\n","import styled from 'styled-components';\n\nexport default styled.div`\n  padding: 40px 0 0 0;\n`;\n","import styled from 'styled-components';\n\nexport default styled.p`\n  text-align: center;\n  font-family: monospace;\n  font-size: 24px;\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store/store';\n\nimport Home from './pages/Home/Home';\nimport Results from './pages/Results/Results';\n\nimport DropZone from './components/DropZone/DropZone';\n\nimport AppWrapper from './elements/AppWrapper/AppWrapper';\nimport Title from './elements/Title/Title';\n\nReactDOM.render(\n  <AppWrapper>\n    <Provider store={store}>\n      <Router>\n        <div>\n          <DropZone />\n          <Title>Dungeon Loot Browser</Title>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/\" exact component={Results} />\n        </div>\n      </Router>\n    </Provider>\n  </AppWrapper>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}