{"version":3,"sources":["utils/fontAwesome.js","ducks/resetApp.js","ducks/timeFilter.js","ducks/dungeonsDump.js","ducks/activeDungeon.js","ducks/availableDungeons.js","store/store.js","middleware/localStorageMiddleware.js","selectors/getForwardsInTimeFrame.js","selectors/getOrganizedLoot.js","elements/Table/Table.js","constants/timeValues.js","elements/Select/Select.js","components/TimeInput/TimeInput.js","components/DungeonSelect/DungeonSelect.js","components/Reset/Reset.style.js","components/Reset/Reset.js","elements/VerticalDelimiter/VerticalDelimiter.js","elements/CenterBlock/CenterBlock.js","pages/Home/Home.style.js","pages/Home/Home.js","selectors/getItemForwards.js","pages/Browse/Browse.style.js","pages/Browse/Browse.js","utils/validateDump.js","components/DropZone/DropZone.style.js","components/DropZone/DropZone.js","elements/AppWrapper/AppWrapper.js","elements/Title/Title.js","index.js"],"names":["library","add","faEye","resetApp","type","setTimeFilter","key","value","setDungeonsDump","dump","setActiveDungeon","dungeon","setAvailableDungeons","dungeons","initialState","activeDungeon","timeFilter","Map","timeFrom","timeTo","dungeonsDump","availableDungeons","defaultState","Object","assign","rootReducer","combineReducers","state","action","set","arguments","length","undefined","middleware","applyMiddleware","_ref","getState","next","result","localStorage","setItem","JSON","stringify","get","toJS","clear","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","getItem","fromJS","parse","createSelector","activeDugneon","dungeonForwards","forwards","_timeFilter$get$split","split","slicedToArray","_timeFilter$get$split3","filter","unixTime","hours","moment","Number","forwardsInTimeFrame","items","loot","forEach","forward","index","push","item","caps","materials","time","amount","totalItems","toConsumableArray","keys","map","name","concat","reduce","a","b","percent","toFixed","sort","prev","Table","props","esm_extends","react_default","createElement","react_table_es","previousText","nextText","loadingText","pageText","ofText","rowsText","rowsSelectorText","noDataText","defaultPageSize","timeValues","label","weight","styled","select","_templateObject","onChange","e","target","connect","timeFilterValues","timeToWeight","find","timeFromWeight","timeFromValues","objectSpread","disabled","timeToValues","dispatch","bindActionCreators","setTimeFilterAction","react","lib","xs","md","Select","defaultValue","DungeonSelect","setActiveDungeonAction","placeholder","defaultProps","button","Reset_style_templateObject","resetAppAction","Reset_style","onClick","div","VerticalDelimiter_templateObject","desktop","css","_templateObject2","CenterBlock_templateObject","Home_style_templateObject","Home","Home_style","fluid","components_TimeInput_TimeInput","VerticalDelimiter","components_DungeonSelect_DungeonSelect","components_Reset_Reset","data","columns","Header","accessor","minWidth","Cell","_ref2","id","sortable","_ref3","CenterBlock","Link","to","react_fontawesome_index_es","icon","_ref4","_getOrganizedLoot","getOrganizedLoot","Browse_style_templateObject","match","getItemForwards","params","Browse_style","validateDump","every","distance","technicalName","DropZone_style","DropZone_style_templateObject","Text","span","DropZone_style_templateObject2","error","NotificationsWrapper","_templateObject3","DropZone","isDumpValid","onDrop","acceptedFiles","file","reader","FileReader","onload","dungeonName","_dungeonsDump$dungeon","_this","setState","readAsText","_this$props","this","setDungeonsDumpAction","setAvailableDungeonsAction","dist_es","accept","multiple","style","cursor","top","width","height","display","justifyContent","alignItems","backgroundColor","fontSize","fontFamily","flexDirection","activeStyle","href","Component","AppWrapper_templateObject","p","Title_templateObject","ReactDOM","render","AppWrapper","es","store","HashRouter","components_DropZone_DropZone","Title","Route","path","exact","component","Browse","document","getElementById"],"mappings":"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","file":"static/js/main.4de1e48e.chunk.js","sourcesContent":["import { library } from '@fortawesome/fontawesome-svg-core';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faEye);\n","export const RESET_APP = 'RESET_APP';\n\nexport const resetApp = () => ({\n  type: RESET_APP,\n});\n","import { RESET_APP } from './resetApp';\nimport { initialState } from '../store/store';\n\nexport const SET_TIME_FILTER = 'SET_TIME_FILTER';\n\nexport const setTimeFilter = (\n  key,\n  value,\n) => ({\n  type: SET_TIME_FILTER,\n  key,\n  value,\n});\n\nexport default function (state, action) {\n  const { key, value } = action;\n\n  switch (action.type) {\n    case SET_TIME_FILTER:\n      return state.set(key, value);\n    case RESET_APP:\n      return initialState.timeFilter;\n    default:\n      return state;\n  }\n}\n","import { RESET_APP } from './resetApp';\nimport { initialState } from '../store/store';\n\nexport const SET_DUNGEONS_DUMP = 'SET_DUNGEONS_DUMP';\n\nexport const setDungeonsDump = dump => ({\n  type: SET_DUNGEONS_DUMP,\n  dump,\n});\n\n\nexport default function (state = null, action) {\n  switch (action.type) {\n    case SET_DUNGEONS_DUMP:\n      return action.dump;\n    case RESET_APP:\n      return initialState.dungeonsDump;\n    default:\n      return state;\n  }\n}\n","import { RESET_APP } from './resetApp';\nimport { initialState } from '../store/store';\n\nexport const SET_DUNGEON = 'SET_DUNGEON';\n\nexport const setActiveDungeon = dungeon => ({\n  type: SET_DUNGEON,\n  dungeon,\n});\n\nexport default function (state, action) {\n  switch (action.type) {\n    case SET_DUNGEON:\n      return action.dungeon;\n    case RESET_APP:\n      return initialState.activeDungeon;\n    default:\n      return state;\n  }\n}\n","import { RESET_APP } from './resetApp';\nimport { initialState } from '../store/store';\n\nexport const SET_AVAILABLE_DUNGEONS = 'SET_AVAILABLE_DUNGEONS';\n\nexport const setAvailableDungeons = dungeons => ({\n  type: SET_AVAILABLE_DUNGEONS,\n  dungeons,\n});\n\nexport default function (state, action) {\n  switch (action.type) {\n    case SET_AVAILABLE_DUNGEONS:\n      return action.dungeons;\n    case RESET_APP:\n      return initialState.availableDungeons;\n    default:\n      return state;\n  }\n}\n","/* eslint-disable no-underscore-dangle */\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Map, fromJS } from 'immutable';\n\nimport { combineReducers } from 'redux-immutable';\n\nimport localStorageMiddleware from '../middleware/localStorageMiddleware';\n\nimport activeDungeonReducer from '../ducks/activeDungeon';\nimport timeFilterReducer from '../ducks/timeFilter';\nimport dungeonsDumpReducer from '../ducks/dungeonsDump';\nimport availableDungeonsReducer from '../ducks/availableDungeons';\n\nexport const initialState = {\n  activeDungeon: null,\n  timeFilter: Map({ timeFrom: '00:00', timeTo: '24:00' }),\n  dungeonsDump: null,\n  availableDungeons: [],\n};\n\nconst defaultState = Object.assign({}, initialState);\n\nconst rootReducer = combineReducers({\n  activeDungeon: activeDungeonReducer,\n  timeFilter: timeFilterReducer,\n  dungeonsDump: dungeonsDumpReducer,\n  availableDungeons: availableDungeonsReducer,\n});\n\nconst getInitialState = () => {\n  if (localStorage.getItem('timeFilter')) {\n    defaultState.timeFilter = fromJS(JSON.parse(localStorage.getItem('timeFilter')));\n  }\n\n  if (localStorage.getItem('dungeonsDump')) {\n    defaultState.dungeonsDump = JSON.parse(localStorage.getItem('dungeonsDump'));\n  }\n\n  if (localStorage.getItem('activeDungeon')) {\n    defaultState.activeDungeon = localStorage.getItem('activeDungeon');\n  }\n\n  if (localStorage.getItem('availableDungeons')) {\n    defaultState.availableDungeons = JSON.parse(localStorage.getItem('availableDungeons'));\n  }\n\n  return Map(defaultState);\n};\n\nconst middleware = applyMiddleware(localStorageMiddleware);\n\nconst composeEnhancers = typeof window === 'object'\n  && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n  }) : compose;\n\nexport default createStore(rootReducer, getInitialState(), composeEnhancers(\n  middleware,\n));\n","import { SET_TIME_FILTER } from '../ducks/timeFilter';\nimport { SET_DUNGEONS_DUMP } from '../ducks/dungeonsDump';\nimport { SET_DUNGEON } from '../ducks/activeDungeon';\nimport { SET_AVAILABLE_DUNGEONS } from '../ducks/availableDungeons';\nimport { RESET_APP } from '../ducks/resetApp';\n\n\nexport default ({ getState }) => next => (action) => {\n  const result = next(action);\n\n  switch (action.type) {\n    case SET_TIME_FILTER:\n      localStorage.setItem('timeFilter', JSON.stringify(getState().get('timeFilter').toJS()));\n\n      return result;\n    case SET_DUNGEONS_DUMP:\n      localStorage.setItem('dungeonsDump', JSON.stringify(getState().get('dungeonsDump')));\n\n      return result;\n    case SET_DUNGEON:\n      localStorage.setItem('activeDungeon', getState().get('activeDungeon'));\n\n      return result;\n    case SET_AVAILABLE_DUNGEONS:\n      localStorage.setItem('availableDungeons', JSON.stringify(getState().get('availableDungeons')));\n\n      return result;\n    case RESET_APP:\n      localStorage.clear();\n\n      return result;\n    default:\n      return result;\n  }\n};\n","import { createSelector } from 'reselect';\nimport moment from 'moment';\n\nconst getActiveDungeon = (state, dungeon) => dungeon || state.get('activeDungeon');\nconst getTimeFilter = state => state.get('timeFilter');\nconst getDungeonsDump = state => state.get('dungeonsDump');\n\nexport default createSelector(\n  [\n    getActiveDungeon,\n    getDungeonsDump,\n    getTimeFilter,\n  ],\n  (activeDugneon, dump, timeFilter) => {\n    if (activeDugneon !== null && dump !== null) {\n      const dungeonForwards = dump[activeDugneon].forwards;\n\n      const [timeFrom] = timeFilter.get('timeFrom').split(':');\n      const [timeTo] = timeFilter.get('timeTo').split(':');\n\n      return dungeonForwards.filter(({ unixTime }) => {\n        const hours = moment(unixTime).hours();\n\n        return Number(timeFrom) <= hours && hours <= Number(timeTo);\n      });\n    }\n\n    return [];\n  },\n);\n","import { createSelector } from 'reselect';\n\nimport forwardsInTimeFrame from './getForwardsInTimeFrame';\n\nconst getForwardsInTimeFrame = state => forwardsInTimeFrame(state);\n\nexport default createSelector(\n  [\n    getForwardsInTimeFrame,\n  ],\n  (forwards) => {\n    if (forwards.length > 0) {\n      const items = {};\n      const loot = [];\n\n      forwards.forEach((forward, index) => {\n        loot.push({\n          loot: forward.loot,\n          item: forward.item,\n          caps: forward.caps,\n          materials: forward.materials,\n          time: forward.time,\n          index,\n        });\n\n        if (forward.item !== null) {\n          if (items[forward.item]) {\n            items[forward.item].amount += 1;\n          } else {\n            items[forward.item] = {\n              amount: 1,\n              time: forward.time,\n              index,\n            };\n          }\n        }\n      });\n\n      const totalItems = [...Object.keys(items).map(name => items[name].amount), 0]\n        .reduce((a, b) => a + b);\n\n      return {\n        items: Object.keys(items).map(name => ({\n          name,\n          time: items[name].time,\n          amount: items[name].amount,\n          index: items[name].index,\n          percent: ((items[name].amount * 100) / totalItems).toFixed(1),\n        })).sort((prev, next) => -(prev.percent - next.percent)),\n        loot,\n      };\n    }\n\n    return {\n      items: [],\n      loot: [],\n    };\n  },\n);\n","import React from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nexport default ({ ...props }) => (\n  <ReactTable\n    previousText=\"<=\"\n    nextText=\"=>\"\n    loadingText=\"Загружаем...\"\n    pageText=\"Страница\"\n    ofText=\"из\"\n    rowsText=\"записей\"\n    rowsSelectorText=\"записей на странице\"\n    noDataText=\"Данных нет\"\n    defaultPageSize={5}\n    {...props}\n  />\n);\n","export default [{\n  value: '00:00',\n  label: '00:00',\n  weight: 0,\n}, {\n  value: '01:00',\n  label: '01:00',\n  weight: 1,\n}, {\n  value: '02:00',\n  label: '02:00',\n  weight: 2,\n}, {\n  value: '03:00',\n  label: '03:00',\n  weight: 3,\n}, {\n  value: '04:00',\n  label: '04:00',\n  weight: 4,\n}, {\n  value: '05:00',\n  label: '05:00',\n  weight: 5,\n}, {\n  value: '06:00',\n  label: '06:00',\n  weight: 6,\n}, {\n  value: '07:00',\n  label: '07:00',\n  weight: 7,\n}, {\n  value: '08:00',\n  label: '08:00',\n  weight: 8,\n}, {\n  value: '09:00',\n  label: '09:00',\n  weight: 9,\n}, {\n  value: '10:00',\n  label: '10:00',\n  weight: 10,\n}, {\n  value: '11:00',\n  label: '11:00',\n  weight: 11,\n}, {\n  value: '12:00',\n  label: '12:00',\n  weight: 12,\n}, {\n  value: '13:00',\n  label: '13:00',\n  weight: 13,\n}, {\n  value: '14:00',\n  label: '14:00',\n  weight: 14,\n}, {\n  value: '15:00',\n  label: '15:00',\n  weight: 15,\n}, {\n  value: '16:00',\n  label: '16:00',\n  weight: 16,\n}, {\n  value: '17:00',\n  label: '17:00',\n  weight: 17,\n}, {\n  value: '18:00',\n  label: '18:00',\n  weight: 18,\n}, {\n  value: '19:00',\n  label: '19:00',\n  weight: 19,\n}, {\n  value: '20:00',\n  label: '20:00',\n  weight: 20,\n}, {\n  value: '21:00',\n  label: '21:00',\n  weight: 21,\n}, {\n  value: '22:00',\n  label: '22:00',\n  weight: 22,\n}, {\n  value: '23:00',\n  label: '23:00',\n  weight: 23,\n}, {\n  value: '24:00',\n  label: '24:00',\n  weight: 24,\n}];\n","import styled from 'styled-components';\n\nexport default styled.select`\n    width: 100%;\n    min-height: 40px;\n    font-size: 18px;\n    padding: 0 0 0 20px;\n    border-radius: 3px;\n\n    & > option {\n      padding: 10px 0;\n      &[disabled] {\n        background: #e8e8e8;\n      }\n    }\n`;\n","import React, { Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'react-flexbox-grid';\n\nimport { setTimeFilter as setTimeFilterAction } from '../../ducks/timeFilter';\nimport timeValues from '../../constants/timeValues';\n\nimport Select from '../../elements/Select/Select';\n\nconst getTimeFilterValues = timeFilter => ({\n  timeFrom: timeFilter.get('timeFrom'),\n  timeTo: timeFilter.get('timeTo'),\n});\n\nconst mapStateToProps = (state) => {\n  const timeFilterValues = getTimeFilterValues(state.get('timeFilter'));\n  const timeToWeight = timeValues.find(time => time.value === timeFilterValues.timeTo).weight;\n  const timeFromWeight = timeValues.find(time => time.value === timeFilterValues.timeFrom).weight;\n\n  const timeFromValues = timeValues.map((time) => {\n    if (time.weight >= timeToWeight) {\n      return {\n        ...time,\n        disabled: true,\n      };\n    }\n\n    return time;\n  });\n\n  const timeToValues = timeValues.map((time) => {\n    if (time.weight < timeFromWeight) {\n      return {\n        ...time,\n        disabled: true,\n      };\n    }\n\n    return time;\n  });\n\n  return {\n    ...timeFilterValues,\n    timeFromValues,\n    timeToValues,\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  setTimeFilterAction,\n}, dispatch);\n\nconst onChange = setTimeFilter => (e) => {\n  setTimeFilter(e.target.name, e.target.value);\n};\n\nconst TimeInput = ({\n  timeFrom,\n  timeTo,\n  setTimeFilterAction: setTimeFilter,\n  timeFromValues,\n  timeToValues,\n}) => (\n  <Fragment>\n\n    <Row>\n      <Col xs={6} md={6}>\n      Начальное время\n      </Col>\n      <Col xs={6} md={6}>\n      Конечное время\n      </Col>\n    </Row>\n    <Row>\n      <Col xs={6} md={6}>\n        <Select\n          name=\"timeFrom\"\n          onChange={onChange(setTimeFilter)}\n          defaultValue={timeFrom}\n        >\n          {\n      timeFromValues.map(time => (\n        <option\n          key={`time-from-item-${time.value}`}\n          value={time.value}\n          disabled={time.disabled}\n        >\n          {time.label}\n        </option>\n      ))\n    }\n        </Select>\n      </Col>\n      <Col xs={6} md={6}>\n        <Select\n          name=\"timeTo\"\n          onChange={onChange(setTimeFilter)}\n          defaultValue={timeTo}\n        >\n          {\n      timeToValues.map(time => (\n        <option\n          key={`time-to-item-${time.value}`}\n          value={time.value}\n          disabled={time.disabled}\n        >\n          {time.label}\n        </option>\n      ))\n    }\n        </Select>\n      </Col>\n    </Row>\n  </Fragment>\n);\n\nTimeInput.propTypes = {\n  timeFrom: PropTypes.string.isRequired,\n  timeTo: PropTypes.string.isRequired,\n  setTimeFilterAction: PropTypes.func.isRequired,\n  timeFromValues: PropTypes.array.isRequired,\n  timeToValues: PropTypes.array.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TimeInput);\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { setActiveDungeon as setActiveDungeonAction } from '../../ducks/activeDungeon';\n\nimport Select from '../../elements/Select/Select';\n\nconst mapStateToProps = state => ({\n  activeDungeon: state.get('activeDungeon'),\n  availableDungeons: state.get('availableDungeons'),\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  setActiveDungeonAction,\n}, dispatch);\n\n\nconst onChange = setActiveDungeon => (e) => {\n  setActiveDungeon(e.target.value);\n};\n\nconst DungeonSelect = ({\n  setActiveDungeonAction: setActiveDungeon,\n  availableDungeons,\n  activeDungeon,\n}) => (\n  <Select\n    placeholder=\"Выбери данж\"\n    onChange={onChange(setActiveDungeon)}\n    defaultValue={activeDungeon}\n  >\n    {\n      availableDungeons.map(dungeon => (\n        <option key={`dungeon-item-${dungeon.value}`} value={dungeon.value}>{dungeon.label}</option>\n      ))\n    }\n  </Select>\n);\n\nDungeonSelect.defaultProps = {\n  activeDungeon: null,\n};\n\nDungeonSelect.propTypes = {\n  setActiveDungeonAction: PropTypes.func.isRequired,\n  availableDungeons: PropTypes.array.isRequired,\n  activeDungeon: PropTypes.string,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DungeonSelect);\n","import styled from 'styled-components';\n\nexport default styled.button`\n    border: 0;\n    width: 100%;\n    padding: 9px 0;\n    background: #ff6e6e;\n    border-radius: 3px;\n    text-transform: uppercase;\n    font-size: 17px;\n    font-family: arial;\n    font-weight: bold;\n    color: white;\n    cursor: pointer;\n    border: 1px solid #ff6e6e;\n`;\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { resetApp as resetAppAction } from '../../ducks/resetApp';\n\nimport Button from './Reset.style';\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  resetAppAction,\n}, dispatch);\n\nconst Reset = ({ resetAppAction: resetApp }) => (\n  <Button onClick={resetApp}>ОЧИСТИТЬ</Button>\n);\n\nReset.propTypes = {\n  resetAppAction: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(Reset);\n","import styled, { css } from 'styled-components';\n\nexport default styled.div`\n  ${props => (props.desktop ? css`\n  height: 10px;\n    width: 10px;\n  ` : '')}\n  @media (max-width: 770px) {\n    height: 10px;\n    width: 10px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport default styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import styled from 'styled-components';\n\nexport default styled.div`\n  margin-top: 20px;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport getOrganizedLoot from '../../selectors/getOrganizedLoot';\n\nimport Table from '../../elements/Table/Table';\n\nimport TimeInput from '../../components/TimeInput/TimeInput';\nimport DungeonSelect from '../../components/DungeonSelect/DungeonSelect';\nimport Reset from '../../components/Reset/Reset';\n\nimport VerticalDelimiter from '../../elements/VerticalDelimiter/VerticalDelimiter';\nimport CenterBlock from '../../elements/CenterBlock/CenterBlock';\n\nimport HomeWrapper from './Home.style';\n\n\nconst mapStateToProps = (state) => {\n  const { items, loot } = getOrganizedLoot(state);\n\n  return {\n    items,\n    loot,\n    activeDungeon: state.get('activeDungeon'),\n  };\n};\n\nconst Home = ({\n  items,\n  loot,\n  activeDungeon,\n}) => (\n  <HomeWrapper>\n    <Grid fluid>\n      <Row>\n        <Col xs={12} md={12}>\n          <TimeInput />\n        </Col>\n      </Row>\n      <VerticalDelimiter desktop />\n      <Row>\n        <Col xs={12} md={6}>\n          Подеземелье\n        </Col>\n        <VerticalDelimiter />\n        <Col xs={12} md={6} />\n      </Row>\n      <Row>\n        <Col xs={12} md={6}>\n          <DungeonSelect />\n        </Col>\n        <VerticalDelimiter />\n        <Col xs={12} md={6}>\n          <Reset />\n        </Col>\n      </Row>\n      <VerticalDelimiter desktop />\n      <Row>\n        <Col xs={12} md={6}>\n          <Table\n            data={items}\n            columns={[{\n              Header: 'Предмет',\n              accessor: 'name',\n              minWidth: 150,\n            }, {\n              Header: 'Кол-во',\n              accessor: 'amount',\n              minWidth: 70,\n            }, {\n              Header: 'Шанс',\n              accessor: 'percent',\n              minWidth: 70,\n              // eslint-disable-next-line react/prop-types\n              Cell: ({ value }) => `${value}%`,\n            }, {\n              Header: 'Просмотреть',\n              accessor: 'name',\n              id: 'itemLink',\n              sortable: false,\n              // eslint-disable-next-line react/prop-types\n              Cell: ({ value }) => (\n                <CenterBlock>\n                  <Link to={`browse/${activeDungeon}/${value}`}>\n                    <FontAwesomeIcon icon=\"eye\" />\n                  </Link>\n                </CenterBlock>\n              ),\n            }]}\n          />\n        </Col>\n        <VerticalDelimiter />\n        <Col xs={12} md={6}>\n          <Table\n            data={loot}\n            columns={[{\n              Header: 'Лут',\n              accessor: 'loot',\n            }, {\n              Header: 'Предмет',\n              accessor: 'item',\n              // eslint-disable-next-line react/prop-types\n              Cell: ({ value }) => (value || 'Ничего'),\n            }, {\n              Header: '🕳',\n              accessor: 'caps',\n            }, {\n              Header: '📦',\n              accessor: 'materials',\n            }, {\n              Header: 'Время',\n              accessor: 'time',\n            }]}\n          />\n        </Col>\n      </Row>\n    </Grid>\n  </HomeWrapper>\n);\n\nHome.defaultProps = {\n  activeDungeon: null,\n};\n\nHome.propTypes = {\n  items: PropTypes.array.isRequired,\n  loot: PropTypes.array.isRequired,\n  activeDungeon: PropTypes.string,\n};\n\nexport default connect(\n  mapStateToProps,\n)(Home);\n","import { createSelector } from 'reselect';\n\nimport forwardsInTimeFrame from './getForwardsInTimeFrame';\n\nconst getForwardsInTimeFrame = (state, props) => forwardsInTimeFrame(state, props.dungeon);\nconst getItem = (state, props) => props.item;\n\nexport default createSelector(\n  [\n    getForwardsInTimeFrame,\n    getItem,\n  ],\n  (forwards, item) => {\n    if (forwards.length > 0) {\n      return forwards.filter(forward => forward.item === item);\n    }\n\n    return [];\n  },\n);\n","import styled from 'styled-components';\n\nexport default styled.div`\n  margin-top: 20px;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nimport getItemForwards from '../../selectors/getItemForwards';\n\nimport Table from '../../elements/Table/Table';\n\nimport BrowseWrapper from './Browse.style';\n\nconst mapStateToProps = (state, { match }) => ({\n  forwards: getItemForwards(state, {\n    item: match.params.item,\n    dungeon: match.params.dungeon,\n  }),\n});\n\nconst Browse = ({\n  forwards,\n}) => (\n  <BrowseWrapper>\n    <Grid fluid>\n      <Row>\n        <Col md={12}>\n          <Table\n            data={forwards}\n            columns={[{\n              Header: 'Предмет',\n              accessor: 'item',\n              // eslint-disable-next-line react/prop-types\n              Cell: ({ value }) => (value || 'Ничего'),\n            }, {\n              Header: 'Лут',\n              accessor: 'loot',\n            }, {\n              Header: '🕳',\n              accessor: 'caps',\n            }, {\n              Header: '📦',\n              accessor: 'materials',\n            }, {\n              Header: 'Время',\n              accessor: 'time',\n            }, {\n              Header: 'Время',\n              accessor: 'time',\n            }]}\n          />\n\n        </Col>\n      </Row>\n    </Grid>\n  </BrowseWrapper>\n);\n\nBrowse.propTypes = {\n  forwards: PropTypes.array.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n)(Browse);\n","export default (dump) => {\n  const keys = Object.keys(dump);\n\n\n  return keys.every((key) => {\n    const dungeon = dump[key];\n\n    return (\n      dungeon.name !== undefined\n      && dungeon.distance !== undefined\n      && dungeon.technicalName !== undefined\n      && dungeon.forwards !== undefined && dungeon.forwards.length !== undefined\n    );\n  });\n};\n","import styled from 'styled-components';\n\nexport default styled.div`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 999;\n`;\n\nexport const Text = styled.span`\n    text-align: center;\n    margin: 15px 0;\n\n    color: ${props => (props.error ? '#f44336' : '')}\n`;\n\nexport const NotificationsWrapper = styled.div`\n  position: absolute;\n  z-index: 1000;\n  bottom: 15px;\n  left: 10px;\n`;\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\n\nimport { setDungeonsDump as setDungeonsDumpAction } from '../../ducks/dungeonsDump';\nimport { setAvailableDungeons as setAvailableDungeonsAction } from '../../ducks/availableDungeons';\nimport { setActiveDungeon as setActiveDungeonAction } from '../../ducks/activeDungeon';\n\nimport validateDump from '../../utils/validateDump';\n\nimport DropZoneWrapper, { Text, NotificationsWrapper } from './DropZone.style';\n\nconst mapStateToProps = state => ({\n  dungeonsDump: state.get('dungeonsDump'),\n  availableDungeons: state.get('availableDungeons'),\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  setDungeonsDumpAction,\n  setAvailableDungeonsAction,\n  setActiveDungeonAction,\n}, dispatch);\n\nclass DropZone extends Component {\n  state = {\n    isDumpValid: true,\n  }\n\n  onDrop = ({\n    setDungeonsDump,\n    setAvailableDungeons,\n    setActiveDungeon,\n  }) => (acceptedFiles) => {\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const dungeonsDump = JSON.parse(reader.result);\n\n        if (validateDump(dungeonsDump)) {\n          const availableDungeons = Object.keys(dungeonsDump).map((dungeonName) => {\n            const {\n              name,\n              technicalName,\n            } = dungeonsDump[dungeonName];\n\n            return {\n              value: technicalName,\n              label: name,\n            };\n          });\n\n\n          setAvailableDungeons(availableDungeons);\n          setDungeonsDump(dungeonsDump);\n          setActiveDungeon(availableDungeons[0].value);\n\n          this.setState(() => ({\n            isDumpValid: true,\n          }));\n        } else {\n          this.setState(() => ({\n            isDumpValid: false,\n          }));\n        }\n      };\n\n      reader.readAsText(file);\n    });\n  };\n\n  render() {\n    const {\n      setDungeonsDumpAction: setDungeonsDump,\n      setAvailableDungeonsAction: setAvailableDungeons,\n      setActiveDungeonAction: setActiveDungeon,\n      dungeonsDump,\n      availableDungeons,\n    } = this.props;\n\n    const {\n      isDumpValid,\n    } = this.state;\n\n    return (dungeonsDump === null || availableDungeons.length === 0) && (\n      <DropZoneWrapper>\n        <Dropzone\n          accept=\".json\"\n          multiple={false}\n          onDrop={this.onDrop({\n            setDungeonsDump,\n            setAvailableDungeons,\n            setActiveDungeon,\n          })}\n          style={{\n            cursor: 'pointer',\n            top: 0,\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            backgroundColor: 'white',\n            fontSize: '34px',\n            fontFamily: 'arial',\n            flexDirection: 'column',\n          }}\n          activeStyle={{\n            backgroundColor: '#effff0',\n          }}\n        >\n          <Text>\n            Перетащи дамп сюда, либо клинки в любом месте что бы открыть файловый диалог\n          </Text>\n\n          {!isDumpValid && <Text error>Это не похоже на корректный дамп</Text>}\n        </Dropzone>\n        <NotificationsWrapper>\n          <Text>\n            Дамп можно взять у бота <a href=\"https://t.me/DungeonMasterRiBot\">@DungeonMasterRiBot</a>\n          </Text>\n        </NotificationsWrapper>\n      </DropZoneWrapper>\n    );\n  }\n}\n\nDropZone.defaultProps = {\n  dungeonsDump: null,\n};\n\nDropZone.propTypes = {\n  dungeonsDump: PropTypes.object,\n  availableDungeons: PropTypes.array.isRequired,\n  setDungeonsDumpAction: PropTypes.func.isRequired,\n  setAvailableDungeonsAction: PropTypes.func.isRequired,\n  setActiveDungeonAction: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DropZone);\n","import styled from 'styled-components';\n\nexport default styled.div`\n  padding: 40px 0 0 0;\n`;\n","import styled from 'styled-components';\n\nexport default styled.p`\n  text-align: center;\n  font-family: monospace;\n  font-size: 24px;\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\n// eslint-disable-next-line no-unused-vars\nimport fontAwesome from './utils/fontAwesome';\n\nimport store from './store/store';\n\nimport Home from './pages/Home/Home';\nimport Browse from './pages/Browse/Browse';\n\nimport DropZone from './components/DropZone/DropZone';\n\nimport AppWrapper from './elements/AppWrapper/AppWrapper';\nimport Title from './elements/Title/Title';\n\nReactDOM.render(\n  <AppWrapper>\n    <Provider store={store}>\n      <Router>\n        <div>\n          <DropZone />\n          <Title>Dungeon Loot Browser</Title>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/browse/:dungeon/:item\" exact component={Browse} />\n        </div>\n      </Router>\n    </Provider>\n  </AppWrapper>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}